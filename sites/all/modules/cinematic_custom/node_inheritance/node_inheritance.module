<?php

function node_inheritance_entity_load($entities, $type) {
  if ($type != 'node') {
    return;
  }
  $query = db_select('node_inheritance', 'ni');
  $query->condition('child', array_keys($entities), 'IN');
  $query->fields('ni');
  $records = $query->execute()->fetchAll();
  foreach ($records as $config) {
    $selection = unserialize($config->field_selection);
    $config->field_inheritance = $selection['inheritance'];
    $config->field_override = $selection['override'];
    $node = $entities[$config->child];

    $node->node_inheritance_config = $config;
    $parent = node_load($config->parent);
    foreach ($config->field_inheritance as $name => $set) {
      $node->{$name} = $parent->{$name};
    }
  }
}

function node_inheritance_field_widget_form_alter(&$element, &$form_state, $context) {
  if ($context['instance']['entity_type'] != 'node') {
    return;
  }
  $node = $form_state['node'];
  if (empty($node->node_inheritance_config)) {
    return;
  }
  $name = $context['instance']['field_name'];
  if (isset($node->node_inheritance_config->field_inheritance[$name])) {
    $element['#disabled'] = TRUE;
  }
}

function node_inheritance_node_prepare($node) {
  if (isset($_GET['node_inheritance_config'])) {
    $query = db_select('node_inheritance', 'ni');
    $query->condition('id', $_GET['node_inheritance_config']);
    $query->fields('ni');
    $config = $query->execute()->fetchObject();
    if ($config) {
      $selection = unserialize($config->field_selection);
      $config->field_inheritance = $selection['inheritance'];
      $config->field_override = $selection['override'];
      $node->node_inheritance_config = $config;
    }
  }
  if (!empty($node->node_inheritance_config)) {
    $inheritance = $node->node_inheritance_config->field_inheritance;
    $fields = field_info_instances('node', $node->type);
    foreach ($fields as $name => $info) {
      if (isset($inheritance[$name])) {
        $node->{$name} = NULL;
      }
    }
  }
}

function node_inheritance_node_insert($node) {
  if (!isset($node->node_inheritance_config)) {
    return;
  }
  db_update('node_inheritance')
    ->condition('id', $node->node_inheritance_config->id)
    ->fields(array('child' => $node->nid))
    ->execute();
}

function node_inheritance_node_delete($node) {
  $or_cond = db_or();
  $or_cond->condition('child', $node->nid);
  $or_cond->condition('parent', $node->nid);

  db_delete('node_inheritance')
    ->condition($or_cond)
    ->execute();
}

function node_inheritance_node_view($node, $view_mode) {
  if ($view_mode != 'full') {
    return;
  }
  if (empty($node->node_inheritance_config)) {
    return;
  }
  $parent_link = l('Parent node', 'node/' . $node->node_inheritance_config->parent);
  $node->content['node_inheritance'] = array('#markup' => $parent_link);
}

function node_inheritance_menu() {
  $items = array();
  $items['node/%node/inheritance'] = array(
    'title' => 'inheritance',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('node_inheritance_edit', 1),
    'access callback' => 'node_access',
    'access arguments' => array('update', 1),
    'type' => MENU_LOCAL_TASK,
    'file' => 'node_inheritance.pages.inc',
  );
  return $items;
}

