<?php

function my_utilities_init() {
   drupal_add_css(drupal_get_path('module', 'my_utilities') . '/include/my_utilities.css');
   drupal_add_js(drupal_get_path('module', 'my_utilities') . '/include/my_utilities.js');
   drupal_add_js(drupal_get_path('module', 'my_utilities') . '/include/atemay.js');
}
function my_utilities_form_alter(&$form, &$form_state, $form_id) {
   if($form_id == 'taxonomy_form_term'){
    $vocb_name = $form['#vocabulary']->machine_name;
     if($vocb_name == 'lobby'){
      $form['name']['#title'] = 'Lobby name';
      $form['description']['#title'] = 'Lobby description & teaser';
     }
   }
}
function _return_addthisevent_markup($node) {
  $output = '';
  if(isset($node->field_cm_event_time) && !empty($node->field_cm_event_time['und'][0]['value'])){
   $start   = date('d-m-Y', $node->field_cm_event_time['und'][0]['value']);
   $start_time = date('H:i:s', $node->field_cm_event_time['und'][0]['value']);
   $end     = date('d-m-Y', $node->field_cm_event_time['und'][0]['value2']) ? date('d-m-Y', $node->field_cm_event_time['und'][0]['value2']) : $start;
   $end_time = date('H:i:s', $node->field_cm_event_time['und'][0]['value2']);
   $summery   = !empty($node->title) ? $node->title : '';
   $description  = $node->field_cm_event_body['und'][0]['safe_summary'] ? $node->field_cm_event_body['und'][0]['safe_summary'] : $node->field_cm_event_body['und'][0]['safe_value']; 
   $owner   = user_load($node->uid);
   $text = t('Add to Calendar') . '
    <span class="_start">'.$start.' ' .$start_time.'</span>
    <span class="_start">'.$end.' ' .$end_time.'</span>
  <span class="_zonecode">40</span>
  <span class="_summary">'.$summery.'</span>
  <span class="_description">'.check_plain($description).'</span>
  <span class="_organizer">'.$owner->name.'</span>
  <span class="_organizer_email">'.$owner->mail.'</span>
  <span class="_all_day_event">false</span>
  <span class="_date_format">DD/MM/YYYY</span>';
  
   $output = l($text,url(current_path(), array('absolute' => TRUE)),array('html' => TRUE,'attributes' => array('class' => array('addthisevent'))));
   

  }  
  return $output;
}
//function my_utilities_block_info() {
//    $blocks['prev'] = array(
//      'info' => t('Custom Previous Links'), //The name that will appear in the block list.
//      'cache' => DRUPAL_CACHE_PER_ROLE, //Default
//    );
//   $blocks['next'] = array(
//      'info' => t('Custom Next Links'), //The name that will appear in the block list.
//      'cache' => DRUPAL_CACHE_PER_ROLE, //Default
//    );
//    return $blocks;
//  }
  //function my_utilities_block_view($delta = '') {
  //  $block = array();
  //  switch($delta){
  //    case 'prev':
  //      $block['subject'] = t('Custom Prev');
  //      $block['content'] =_node_prev_links();
  //      break;
  //    case 'next':
  //      $block['subject'] = t('Custom Next');
  //      $block['content'] =_node_next_links();
  //   }
  //  return $block;
  //}
  //function pn_node($node, $mode = 'n') {
  // if (!function_exists('prev_next_nid')) {
  //   return NULL;
  // }
  // $node = node_load(arg(1));
  // //drupal_set_message('<pre>'.print_r($node, 1).'</pre>');
  //   // if($node->type =='cm_event' || $node->type =='cm_movie' || $node->type =='cm_movie_group'){
  //       switch($mode) {
  //         case 'p':
  //           $n_nid = prev_next_nid($node->nid, 'prev');
  //           $link_text = t('Previous');
  //           break;
  //      
  //         case 'n':
  //           $n_nid = prev_next_nid($node->nid, 'next');
  //           $link_text = t('Next');
  //           break;
  //      
  //         default:
  //           return NULL;
  //       }
  //   // }
  //    if ($n_nid) {
  //      $n_node = node_load($n_nid);
  //      $html = l($link_text, "node/$n_nid", array('html' => TRUE));
  //      return $html;
  //    }
  // }
  //function _node_prev_links(){
  //    $node = node_load(arg(1));
  //    $output='';
  //    $output .= '<div class="node-nav prev-custom custom-nav">';
  //       $output .= '<ul>';
  //          $output .= '<li class="prev">'.pn_node($node, 'p').'</li>';
  //       $output .= '</ul>';
  //    $output .= '</div>';
  //    return $output;
  // }
  // function _node_next_links(){
  //    $node = node_load(arg(1));
  //    $output='';
  //    $output .= '<div class="node-nav next-custom custom-nav">';
  //       $output .= '<ul>';
  //          $output .= '<li class="next">'.pn_node($node, 'n').'</li>';
  //       $output .= '</ul>';
  //    $output .= '</div>';
  //    return $output;
  // }
   function my_utilities_views_pre_render(&$view) {
     //remove current event from the future events view list. this has to be done here because we cant exclude the node argument from view as it is not only excluded but also used for limiting results.
     if($view->name == 'event_ct_view' && $view->current_display == 'panel_pane_5') {
       foreach($view->result as $key => &$result) {
           if($result->node_field_data_field_event_corresponding_ref_nid == $view->args[0]) {
               unset($view->result[$key]);			
           }		
       }
     }
   }
   function my_utilities_ctools_plugin_directory($module, $plugin) {
      if (($module == 'ctools' || $module == 'panels') && !empty($plugin)) {
         return 'plugins/' . $plugin;
      }
   }
function share_this_view_block_content(){
   $output ='';
   $node = node_load(arg(1));
    global $base_url;
    $path = drupal_get_path_alias('/node/'.$node->nid);
    $targetPath = $base_url.$path;
    $output .='<div class="share-pane-container">';
    $output .= '<div class="flag-custom share-pane">' . flag_create_link('favorite_', $node->nid) . '</div>';
    $output .= '<div  class="facebook-custom share-pane" onclick = "openDilog()"><span>'.t('Facebook').'</span></div>';
    $output .= '<div  class="whatsapp-custom share-pane" id="whatsApp-share"></div>';
    $output .='</div>';
   ?>
   <script>
     function openDilog() {
      var url = "<?php print $targetPath; ?>";
      window.open(
      'https://www.facebook.com/sharer/sharer.php?u='+encodeURIComponent(url), 
      'facebook-share-dialog', 
      'width=626,height=436'); 
    };
    </script>
   <?php
   return $output;
  }
/**
 * Implements hook_admin_paths().
 *//*
function my_utilities_admin_paths() {
  $paths['admin/config/mini-panels-ipe/*'] = FALSE;
  return $paths;
}*/
