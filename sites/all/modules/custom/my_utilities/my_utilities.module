<?php

function my_utilities_init() {
   drupal_add_css(drupal_get_path('module', 'my_utilities') . '/my_utilities.css');
   drupal_add_js(drupal_get_path('module', 'my_utilities') . '/my_utilities.js');
   drupal_add_js(drupal_get_path('module', 'my_utilities') . '/atemay.js');
}
function my_utilities_form_alter(&$form, &$form_state, $form_id) {
   if($form_id == 'taxonomy_form_term'){
    $vocb_name = $form['#vocabulary']->machine_name;
     if($vocb_name == 'lobby'){
      $form['name']['#title'] = 'Lobby name';
      $form['description']['#title'] = 'Lobby description & teaser';
     }
   }
}
function _return_addthisevent_markup($node) {
  $output = '';
  if(isset($node->field_cm_event_time) && !empty($node->field_cm_event_time['und'][0]['value'])){
   $start   = date('d-m-Y', $node->field_cm_event_time['und'][0]['value']);
   $start_time = date('H:i:s', $node->field_cm_event_time['und'][0]['value']);
   $end     = date('d-m-Y', $node->field_cm_event_time['und'][0]['value2']) ? date('d-m-Y', $node->field_cm_event_time['und'][0]['value2']) : $start;
   $end_time = date('H:i:s', $node->field_cm_event_time['und'][0]['value2']);
   $summery   = !empty($node->title) ? $node->title : '';
   $description  = $node->field_cm_event_body['und'][0]['safe_summary'] ? $node->field_cm_event_body['und'][0]['safe_summary'] : $node->field_cm_event_body['und'][0]['safe_value']; 
   $owner   = user_load($node->uid);
   $text = t('Add to Calendar') . '
    <span class="_start">'.$start.' ' .$start_time.'</span>
    <span class="_start">'.$end.' ' .$end_time.'</span>
  <span class="_zonecode">40</span>
  <span class="_summary">'.$summery.'</span>
  <span class="_description">'.check_plain($description).'</span>
  <span class="_organizer">'.$owner->name.'</span>
  <span class="_organizer_email">'.$owner->mail.'</span>
  <span class="_all_day_event">false</span>
  <span class="_date_format">DD/MM/YYYY</span>';
  
   $output = l($text,url(current_path(), array('absolute' => TRUE)),array('html' => TRUE,'attributes' => array('class' => array('addthisevent'))));
   

  }  
  return $output;
}

function my_utilities_block_info() {
    $blocks['prev'] = array(
      'info' => t('Custom Previous Links'), //The name that will appear in the block list.
      'cache' => DRUPAL_CACHE_PER_ROLE, //Default
    );
   $blocks['next'] = array(
      'info' => t('Custom Next Links'), //The name that will appear in the block list.
      'cache' => DRUPAL_CACHE_PER_ROLE, //Default
    );
    return $blocks;
  }
  function my_utilities_block_view($delta = '') {
    $block = array();
    switch($delta){
      case 'prev':
        $block['subject'] = t('Custom Prev');
        $block['content'] =_node_prev_links();
        break;
      case 'next':
        $block['subject'] = t('Custom Next');
        $block['content'] =_node_next_links();
     }
    return $block;
  }
  function pn_node($node, $mode = 'n') {
   if (!function_exists('prev_next_nid')) {
     return NULL;
   }
   $node = node_load(arg(1));
   if($node->type =='cm_event' || $node->type =='cm_movie' || $node->type =='cm_movie_group'){
      switch($mode) {
        case 'p':
          $n_nid = prev_next_nid($node->nid, 'prev');
          $link_text = t('Previous');
          break;
     
        case 'n':
          $n_nid = prev_next_nid($node->nid, 'next');
          $link_text = t('Next');
          break;
     
        default:
          return NULL;
      }
   }
  if ($n_nid) {
    $n_node = node_load($n_nid);
    $html = l($link_text, "node/$n_nid", array('html' => TRUE));
    return $html;
  }
}
  function _node_prev_links(){
      $node = node_load(arg(1));
      $output='';
      $output .= '<div class="node-nav prev-custom custom-nav">';
         $output .= '<ul>';
            $output .= '<li class="prev">'.pn_node($node, 'p').'</li>';
         $output .= '</ul>';
      $output .= '</div>';
      return $output;
  }
   function _node_next_links(){
      $node = node_load(arg(1));
      $output='';
      $output .= '<div class="node-nav next-custom custom-nav">';
         $output .= '<ul>';
            $output .= '<li class="next">'.pn_node($node, 'n').'</li>';
         $output .= '</ul>';
      $output .= '</div>';
      return $output;
  }
/**
 * Implements hook_admin_paths().
 *//*
function my_utilities_admin_paths() {
  $paths['admin/config/mini-panels-ipe/*'] = FALSE;
  return $paths;
}*/