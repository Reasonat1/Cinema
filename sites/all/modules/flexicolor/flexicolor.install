<?php

/**
 * @file flexicolor.install
 * Flexicolor installation file.
 */

/**
 * Implements hook_install().
 */
function flexicolor_install() {

}

/**
 * Implements hook_uninstall().
 */
function flexicolor_uninstall() {

}

/**
 * Implements hook_schema().
 */
function flexicolor_schema() {
  $schema = array();

  $schema['flexicolor_selector'] = array(
    'description' => t('Store selector rules along with a default color for the rule'),
    'fields' => array(
      'fsid' => array(
        'description' => t('The flexicolor selection rule ID'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'machine' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'Unique ID for environments.',
      ),
      'display_name' => array(
        'description' => t('Display Name'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
      'optional_description' => array(
        'description' => t('Optional Description'),
        'type' => 'text',
        'size' => 'normal',
      ),
      'selector' => array(
        'description' => t('Selector'),
        'type' => 'text',
        'size' => 'medium',
        'not null' => TRUE,
      ),
      'type' => array(
        'description' => t('type of item being colored'),
        'type' => 'varchar',
        'length' => 20,
        'not null' => TRUE,
        'default' => 'background-color',
      ),
      'default_color' => array(
        'description' => t('Default color for selector(s)'),
        'type' => 'varchar',
        'length' => 7,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'fsid',
    ),
    'unique keys' => array(
      'name' => array('machine'),
    ),
  );

  $schema['flexicolor_preset'] = array(
    'description' => t('Description of the preset'),
    'fields' => array(
      'fpid' => array(
        'description' => t('Preset ID'),
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'machine' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'Unique ID for environments.',
      ),
      'display_name' => array(
        'description' => t('Display Name'),
        'type' => 'varchar',
        'length' => 128,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array(
      'fpid',
    ),
    'unique keys' => array(
      'name' => array('machine'),
    ),
  );

  $schema['flexicolor_preset_selector'] = array(
    'description' => t('Create a preset based on the selectors'),
    'fields' => array(
      'machine' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'Unique ID for environments.',
      ),
      'fpmachine' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'Flexicolor Preset',
      ),
      'fsmachine' => array(
        'type' => 'varchar',
        'length' => '32',
        'description' => 'Flexicolor Selector',
      ),
      'color' => array(
        'description' => t('Preset Selector Color'),
        'type' => 'varchar',
        'length' => 7,
        'not null' => TRUE,
      )
    ),
    'primary key' => array(
      'fpmachine',
      'fsmachine',
    ),
    'unique keys' => array(
      'name' => array('machine'),
    ),
  );

  return $schema;
}

/**
 * Add and change columns for new machine fields.
 */
function flexicolor_update_7200() {
  db_add_field('flexicolor_selector', 'machine',
    // spec
    array(
      'type' => 'varchar',
      'length' => '32',
      'description' => 'Unique ID for environments.',
    ),
    // new keys
    array(
      'unique keys' => array(
        'name' => array('machine'),
      ),
    )
  );
  db_change_field('flexicolor_selector', 'selector', 'selector',
    // spec; change type, remove length, and add size
    array(
      'description' => t('Selector'),
      'type' => 'text',
      'size' => 'medium',
      'not null' => TRUE,
    )
    // no new keys
  );
  db_change_field('flexicolor_selector', 'type', 'type',
    // spec; change description and default
    array(
      'description' => t('type of item being colored'),
      'type' => 'varchar',
      'length' => 20,
      'not null' => TRUE,
      'default' => 'background-color',
    )
    // no new keys
  );
  db_add_field('flexicolor_preset', 'machine',
    // spec
    array(
      'type' => 'varchar',
      'length' => '32',
      'description' => 'Unique ID for environments.',
    ),
    // new keys
    array(
      'unique keys' => array(
        'name' => array('machine'),
      ),
    )
  );
  db_add_field('flexicolor_preset_selector', 'machine',
    // spec
    array(
      'type' => 'varchar',
      'length' => '32',
      'description' => 'Unique ID for environments.',
    ),
    // new keys
    array(
      'unique keys' => array(
        'name' => array('machine'),
      ),
    )
  );
  // drop keys
  db_drop_primary_key('flexicolor_preset_selector');
  // change name and type; remove size, unsigned, not null, and default;
  // add length and description
  db_change_field('flexicolor_preset_selector', 'fpid', 'fpmachine',
    // spec
    array(
      'type' => 'varchar',
      'length' => '32',
      'description' => 'Flexicolor Preset',
    ),
    // new keys
    array(
      'fpmachine',
      'fsmachine',
    )
  );
  // drop keys
  db_drop_primary_key('flexicolor_preset_selector');
  // change name and type; remove size, unsigned, not null, and default;
  // add length and description
  db_change_field('flexicolor_preset_selector', 'fsid', 'fsmachine',
    // spec
    array(
      'type' => 'varchar',
      'length' => '32',
      'description' => 'Flexicolor Selector',
    ),
    // new keys
    array(
      'fpmachine',
      'fsmachine',
    )
  );
}

/**
 * Add a description field for rules.
 */
function flexicolor_update_7201() {
  db_add_field('flexicolor_selector', 'optional_description',
    // spec
    array(
      'type' => 'text',
      'size' => 'normal',
      'description' => 'Optional Description',
    )
  );
}
